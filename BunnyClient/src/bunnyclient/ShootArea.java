/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bunnyclient;

import connector.ServerConnector;
import controller.ClickLockController;
import controller.SendXYController;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import observerImpl.ClickLockObserverImpl;

/**
 *
 * @author LAHIRU
 */
public class ShootArea extends javax.swing.JFrame {

    /**
     * Creates new form ShootArea
     */
    private String name;
    private int X;
    private int Y;
    private boolean isClicked = true;
    private boolean b = true;
    private SendXYController sendXYController;
    private ClickLockController clickLockController;

    public ShootArea(final String name) {
        this.name = name;
        initComponents();
        setTitle("Shooting Area");
        try {
            sendXYController = ServerConnector.getServerConnector().getSendXYController();
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            Logger.getLogger(ShootArea.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            clickLockController = ServerConnector.getServerConnector().getClickLockController();
            ClickLockObserverImpl clickLockObserverImpl = new ClickLockObserverImpl(this);
            clickLockController.addClickObserver(clickLockObserverImpl);
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            Logger.getLogger(ShootArea.class.getName()).log(Level.SEVERE, null, ex);
        }

        addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (b) {
                    X = e.getX();
                    Y = e.getY();
                    try {
                        sendXYController.sendXY(2*X, 2*Y, name, true);
                    } catch (RemoteException ex) {
                        Logger.getLogger(ShootArea.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    isClicked = false;
                    try {
                        clickLockController.sendClick(true, name);
                    } catch (RemoteException ex) {
                        Logger.getLogger(ShootArea.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    b = false;
                }
            }
        });
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 153));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShootArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShootArea("").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public void lockClick(boolean click, String name) {
        if (!this.name.equals(name)) {
            if (click) {
                System.out.println("unlock");
                b = true;
            }
        }else{
            System.out.println("lock..");
            b=false;
        }
    }  
}
